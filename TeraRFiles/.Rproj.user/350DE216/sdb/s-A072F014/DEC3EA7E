{
    "contents" : "library(RPostgreSQL)\ndb <- dbConnect(PostgreSQL(), \n                user = \"postgres\", #This needs to be adjusted for your login details\n                host = \"localhost\",\n                dbname = \"gaming\", \n                password = \"postgres\") #This needs to be adjusted for your login details\n#Some example pulls\ndbListTables(db)\n\nchar <- dbGetQuery(db,\"select * from characters\")\n#JUST ADDING INT CODE-USED FOR VISUAL\nchar$code <- ifelse(char$class==\"Archer\",1,\n              ifelse(char$class==\"Berserker\",2,\n                ifelse(char$class==\"Lancer\",3,\n                  ifelse(char$class==\"Mystic\",4,\n                    ifelse(char$class==\"Priest\",5,\n                      ifelse(char$class==\"Slayer\",6,\n                        ifelse(char$class==\"Sorcerer\",7,\n                          ifelse(char$class==\"Warrior\",8,\n                                 0))))))))\n\n## Simulation Engine\n## takes in a class type and number of simulations\nterasim <- function(classsim,num,...){\n  require(plyr)\n  require(triangle)\n  pb<- txtProgressBar(min=1,max=num,style=3) #can mess with style of this\n  l=1\n  i=1\n  samp = 0\n  cube1 <- array(1:(32*41*num),dim=c(32,41,num))\n  for (i in 1:num){\n    setTxtProgressBar(pb,i)\n    for (l in 1:max(char$level)){\n      if (l==1){\n        char2 <- char[char$level==l & char$class==classsim,]\n        samp <-  char2[sample(1:dim(char2)[1], size=1, replace=TRUE),];samp$prob=0;samp$probdif=0;samp$qtile=0\n      } else {\n        char2 <- char[char$level==l & \n                      char$class==classsim & \n                      char$kills_monsters >= samp[l-1,\"kills_monsters\"],] #for now, just constraint on monsters killed\n       if (nrow(char2)==0 | samp$level[l-1]==0){\n          samp <- rbind(samp,0)\n        }\n        else {\n          ##TRIANGLE\n          char2$prob <- ifelse(quantile(char2$kills_monsters)[[2]]<char2$kills_monsters,\n                               2*((max(char2$kills_monsters)+1)-char2$kills_monsters)/((max(char2$kills_monsters)+1)-(min(char2$kills_monsters)-1))*((max(char2$kills_monsters)+1)-quantile(char2$kills_monsters)[[2]]),\n                               2*(char2$kills_monsters-(min(char2$kills_monsters)-1))/((max(char2$kills_monsters)+1)-(min(char2$kills_monsters)-1))*(quantile(char2$kills_monsters)[[2]]-(min(char2$kills_monsters)-1))\n          )\n          char2$probdif <- char2$prob/max(char2$prob)\n          char2$qtile <- (char2$kills_monsters-min(char2$kills_monsters))/(max(char2$kills_monsters)-min(char2$kills_monsters))\n          samp <- rbind(samp,char2[sample(1:dim(char2)[1], size=1, replace=TRUE, prob=char2$prob),])\n        }\n      }\n      l<-l+1\n    } #end the level looping mechanic\n    cube1[,,i] <- as.matrix(samp)\n    samp = 0\n  } #end the player looping mechanic\n  return(cube1)\n  close(pb)#end progress bar\n}\n\n## Simulation loop\n## Will run through all class types given a number of simulations per class to run\nnumsim <- 1000\narcher100 <- terasim(\"Archer\",numsim)\nberserker100 <- terasim(\"Berserker\",numsim)\nlancer100 <- terasim(\"Lancer\",numsim)\nmystic100 <- terasim(\"Mystic\",numsim)\npriest100 <- terasim(\"Priest\",numsim)\nslayer100 <- terasim(\"Slayer\",numsim)\nsorcerer100 <- terasim(\"Sorcerer\",numsim)\nwarrior100 <- terasim(\"Warrior\",numsim)\n\nsimData <- function(numsim, metricCode){\n  warri=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    warri[i,] <- c(warrior100[,,i][1,3],warrior100[,,i][1,38],metricCode,as.numeric(t(warrior100[,,i][,metricCode])))\n  }\n  mysti=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    mysti[i,] <- c(mystic100[,,i][1,3],mystic100[,,i][1,38],metricCode,as.numeric(t(mystic100[,,i][,metricCode])))\n  }\n  pries=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    pries[i,] <- c(priest100[,,i][1,3],priest100[,,i][1,38],metricCode,as.numeric(t(priest100[,,i][,metricCode])))\n  }\n  arche=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    arche[i,] <- c(archer100[,,i][1,3],archer100[,,i][1,38],metricCode,as.numeric(t(archer100[,,i][,metricCode])))\n  }\n  lance=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    lance[i,] <- c(lancer100[,,i][1,3],lancer100[,,i][1,38],metricCode,as.numeric(t(lancer100[,,i][,metricCode])))\n  }\n  slaye=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    slaye[i,] <- c(slayer100[,,i][1,3],slayer100[,,i][1,38],metricCode,as.numeric(t(slayer100[,,i][,metricCode])))\n  }\n  sorce=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    sorce[i,] <- c(sorcerer100[,,i][1,3],sorcerer100[,,i][1,38],metricCode,as.numeric(t(sorcerer100[,,i][,metricCode])))\n  }\n  berse=mat.or.vec(numsim,35)\n  for(i in 1:numsim){\n    berse[i,] <- c(berserker100[,,i][1,3],berserker100[,,i][1,38],metricCode,as.numeric(t(berserker100[,,i][,metricCode])))\n  }\n  data = rbind(warri,mysti,pries,arche,lance,slaye,sorce,berse)\n  fixins <- c('Class','TagCode','metricCode','1','2','3','4','5','6','7','8','9','10','11','12','13',\n                      '14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29',\n                      '30','31','32')\n  colnames(data) <- fixins\n  return(data)\n}\n\n## Metric code goes from 7 to 37\n##[7]  \"friends\"               \"quests_completed\"      \"achievements\"         \n##[10] \"attack\"                \"defense\"               \"knockdown\"            \n##[13] \"knockdown_resist\"      \"crit_ratio\"            \"crit_resist\"          \n##[16] \"strength\"              \"endurance\"             \"damage\"               \n##[19] \"balance\"               \"speed_attack\"          \"speed_movement\"       \n##[22] \"mining\"                \"plants\"                \"energy\"               \n##[25] \"kills_monsters\"        \"loot_total_items\"      \"kills_monsters_small\" \n##[28] \"kills_monsters_medium\" \"kills_monsters_large\"  \"auctions_created\"     \n##[31] \"auctions_expired\"      \"auctions_sold\"         \"auctions_purchased\"   \n##[34] \"deaths_monsters\"       \"enchant_success\"       \"enchant_attempt\"      \n##[37] \"craft_success\"   \npb<- txtProgressBar(min=7,max=37,style=3) #can mess with style of this\nfor (k in 7:37){\n  setTxtProgressBar(pb,k)\n  testing <- simData(1000,k)\n  write.csv(testing,paste('C:/Users/Riles/Documents/Northwestern/Projects/PLAIT Lab/TeraData/simData/sim',numsim,'metricCode',k,'.csv',sep=\"\"),\n          quote=FALSE,\n          row.names=FALSE)\n  testing <- 0\n  close(pb)#end progress bar\n}\n\n##warrior100[,,1][,37]",
    "created" : 1364977792008.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2587591260",
    "id" : "DEC3EA7E",
    "lastKnownWriteTime" : 1365002136,
    "path" : "~/Documents/Northwestern/Projects/PLAIT Lab/TeraData/TeraRFiles/teraSim.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}